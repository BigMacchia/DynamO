#    DYNAMO:- Event driven molecular dynamics simulator 
#    http://www.marcusbannerman.co.uk/dynamo
#    Copyright (C) 2009  Marcus N Campbell Bannerman <m.bannerman@gmail.com>
#
#    This program is free software: you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    version 3 as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

##########################################################################
# Compiler configuration. The gcc definition will be used unless you
# already have defined a toolset in your user-config.jam file or on
# the command line, e.g., toolset=intel .
import feature ;
if ! gcc in [ feature.values <toolset> ]
{ using gcc ; }

##########################################################################
#Location of the boost build root directory
path-constant BOOST_ROOT : src/boost/tools/build/v2 ;

##########################################################################
#If the build-dir doesn't exist at the very start of the build, all
#the configuration test build output goes to stdout. So we create the
#directory now
import os ;
local build-dir = "build-dir" ;
if [ os.name ] = NT
{ SHELL "mkdir "$(build-dir) ; }
else
{ SHELL "mkdir -p "$(build-dir) ; }

##########################################################################
#These are the options that can be set when calling bjam
#If this feature is unset, its value will be determined from configuration tests
feature.feature coil-integration : no yes : propagated optional ;

##########################################################################
#Additional build variants
#
# The fulldebug variant uses compiler and library features to aid in debugging
# We might consider adding <cxxflags>ansi <cxxflags>pedantic
#<cxxflags>Weffc++ <define>_GLIBXX_DEBUG_PEDANTIC
#<define>_GLIBCXX_DEBUG_PEDANTIC <define>_GLIBCXX_CONCEPT_CHECKS
#<define>_GLIBCPP_DEBUG_PEDANTIC <define>_GLIBCPP_DEBUG
#<define>_GLIBCPP_CONCEPT_CHECKS
variant fulldebug : debug : <define>_GLIBCXX_DEBUG  <define>DYNAMO_DEBUG  <define>DYNAMO_CollDebug <define>DYNAMO_WallCollDebug <cxxflags>-fstack-protector-all <define>DYNAMO_OverlapTesting ;

# The valgrind variant is useful for code analysis in tools like
# valgrind. It merely turns debug symbols on and turns inlining off
variant valgrind : <inlining>off <optimization>speed <debug-symbols>on <profiling>off ;
# The same as valgrind but with inlining on
variant valgrind_in : valgrind : <inlining>on  ;

##########################################################################
#Dependency calculations
#Parses the command line (to see if a property has been set by the user)
rule cmd-line-feature-value ( feature )
{ return [ MATCH "^$(feature)=(.*)" :  [ modules.peek : ARGV ] ] ; }

rule coil-integration-check ( )
{
  if ! [ cmd-line-feature-value coil-integration ]
  { 
    return [ check-target-builds src/coil//coilDependencies "Dynamo-Coil Integration" 
    	   : "<coil-integration>yes"  : "<coil-integration>no" ] ;
  }
}

##########################################################################
#Main project definition
project	: requirements
          <threading>multi
	  ##Allow garbage collection of unused linked symbols
	  <toolset>gcc:<cflags>-ffunction-sections
	  <toolset>gcc:<cflags>-fdata-sections
	  <toolset>gcc:<linkflags>-Wl,--gc-sections
	  <variant>release:<define>NDEBUG
	  [ coil-integration-check ]
	: default-build release
	: build-dir $(build-dir)
	;

##########################################################################
#Targets

alias install : src/dynamo//install-dynamo ;
alias install-coil : src/coil//install-coil ;
alias test : src/magnet//test ;

explicit install install-coil test  ;
