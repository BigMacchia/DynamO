#    DYNAMO:- Event driven molecular dynamics simulator 
#    http://www.marcusbannerman.co.uk/dynamo
#    Copyright (C) 2009  Marcus N Campbell Bannerman <m.bannerman@gmail.com>
#
#    This program is free software: you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    version 3 as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

import feature : feature ;
feature color : no yes : propagated optional ;
feature visualizer : no yes : propagated optional ;

#using intel-linux ;

path-constant BOOST_ROOT : boost/tools/build/v2 ;

import dynamo-tags ;

rule trim-nl ( str )
{
   return [ MATCH "([^
]*)" : $(str) ] ;
}

local githash = [ trim-nl [ SHELL "git rev-parse --verify HEAD" ] ] ; 

project	: requirements
	  <define>DYNAMO_double_precsision
	  <color>yes:<define>DYNAMO_Colour
	  <visualizer>yes
	  <color>yes
	  <define>GITHASH=\\\"$(githash)\\\"
	  <toolset>gcc:<cxxflags>-Wno-long-long
	  <toolset>gcc:<cxxflags>-Wno-parentheses
	  <tag>@dynamo-tags.naming
	: default-build release
	: build-dir build-dir
	;

variant cachegrind : <inlining>off <optimization>speed <debug-symbols>on 
	<profiling>off ;

variant cachegrind_in : <inlining>on <optimization>speed <debug-symbols>on 
	<profiling>off ;

variant massif : <inlining>off <optimization>speed <debug-symbols>on 
	<profiling>off ;

variant massif_in : <inlining>on <optimization>speed <debug-symbols>on 
	<profiling>off ;

variant fulldebug : debug : <define>_GLIBCXX_DEBUG  <define>DYNAMO_DEBUG ; 
#<cxxflags>ansi
#<cxxflags>pedantic
#<cxxflags>Weffc++
#<define>DYNAMO_CollDebug <define>DYNAMO_WallCollDebug
#<define>_GLIBXX_DEBUG_PEDANTIC <define>_GLIBCXX_DEBUG_PEDANTIC  <define>_GLIBCXX_CONCEPT_CHECKS <define>_GLIBCPP_DEBUG_PEDANTIC <define>_GLIBCPP_DEBUG <define>_GLIBCPP_CONCEPT_CHECKS
exe dynareplex_opt 
    : src/programs/dynareplex_opt.cpp boost//program_options
    : <link>static
    ;

exe dynahist_rw 
    : src/programs/dynahist_rw.cpp src//dynamo_core 
    : <link>static
    ;

exe dynarun 
    : src/programs/dynarun.cpp src//dynamo_core
    : <link>static 
    ;

exe dynamod 
    : src/programs/dynamod.cpp src//dynamo_core
    : <link>static 
    ;

exe threadpool_test 
    : test/src/threadpool_test.cpp src//dynamo_core
    : 
    ;

local gladecflags = [ trim-nl [ SHELL "pkg-config gtkmm-2.4 --cflags" ] ] ; 
local gladelibflags = [ trim-nl [ SHELL "pkg-config gtkmm-2.4 --libs" ] ] ; 

exe glade_test
    : test/src/glade_test.cpp
    : <cflags>$(gladecflags) <linkflags>$(gladelibflags)
    ;

install install-test
	: src/coil//gl_test threadpool_test glade_test
	: <location>test
	;

install install-bin 
	: dynarun dynahist_rw dynamod
	: <location>bin
	;	


alias install : install-bin ;

explicit install install-bin ;

alias test : src/magnet//test src/coil//test src//test ;
