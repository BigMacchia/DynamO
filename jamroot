#    DYNAMO:- Event driven molecular dynamics simulator 
#    http://www.marcusbannerman.co.uk/dynamo
#    Copyright (C) 2009  Marcus N Campbell Bannerman <m.bannerman@gmail.com>
#
#    This program is free software: you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    version 3 as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

##########################################################################
#Location of the boost build root directory
path-constant BOOST_ROOT : boost/tools/build/v2 ;

##########################################################################
#If the build-dir doesn't exist at the very start of the build, all
#config output goes to stdout. So we create the directory now
SHELL "mkdir build-dir" ;

##########################################################################
#Aliases for the libraries of dynamo
use-project dynamo_core : src/ ;
use-project magnet : src/magnet ;
use-project coil : src/coil ;

##########################################################################
#These are the options that can be set when calling bjam
import feature : feature ;
feature color : yes no : propagated ;

##########################################################################
#Imports 
#This rule imports jam files in remote locations into a nice namespace
rule cleanimport ( modules + )
{
  for local m in $(modules)
  {
    import $(m) ;
    local r = [ RULENAMES $(m) ] ;
    import $(m) : $(r) : $(m:B).$(r) ;
  }
}
#this imports src/magnet/jam/buildinfo into buildinfo
cleanimport src/magnet/jam/buildinfo ;
import dynamo-tags ;

##########################################################################
#Additional build variants
#The fulldebug variant adds additional defines to help aid debugging
#We might consider adding <cxxflags>ansi <cxxflags>pedantic <cxxflags>Weffc++
#<define>_GLIBXX_DEBUG_PEDANTIC <define>_GLIBCXX_DEBUG_PEDANTIC  <define>_GLIBCXX_CONCEPT_CHECKS <define>_GLIBCPP_DEBUG_PEDANTIC <define>_GLIBCPP_DEBUG <define>_GLIBCPP_CONCEPT_CHECKS
variant fulldebug : debug : <define>_GLIBCXX_DEBUG  <define>DYNAMO_DEBUG  <define>DYNAMO_CollDebug <define>DYNAMO_WallCollDebug <cxxflags>-fstack-protector-all <define>DYNAMO_OverlapTesting ;

#The valgrind variant is useful for code analysis in tools like valgrind
variant valgrind : <inlining>off <optimization>speed <debug-symbols>on <profiling>off ;
variant valgrind_in : valgrind : <inlining>on  ;

##########################################################################
#Project definition
project	: requirements
	  <color>yes:<define>DYNAMO_Colour
	  <tag>@dynamo-tags.naming
          <threading>multi
          <link>static
	: default-build release
	: build-dir build-dir
	;

##########################################################################
#Targets
make buildinfo.hpp : : @buildinfo.gen_buildinfo_data :  ;
always buildinfo.hpp ;

obj dynarun_src : src/programs/dynarun.cpp
                : <use>src//dynamo_core <implicit-dependency>buildinfo.hpp ;
exe dynarun : dynarun_src src//dynamo_core ;

obj dynareplex_opt_src : src/programs/dynareplex_opt.cpp : <implicit-dependency>buildinfo.hpp ;
exe dynareplex_opt : dynareplex_opt_src boost//program_options ;

obj dynahist_rw_src : src/programs/dynahist_rw.cpp 
                    : <implicit-dependency>buildinfo.hpp <use>src//dynamo_core ;
exe dynahist_rw : dynahist_rw_src src//dynamo_core ;

obj dynamod_src : src/programs/dynamod.cpp 
                : <implicit-dependency>buildinfo.hpp <use>src//dynamo_core ;
exe dynamod : dynamod_src src//dynamo_core ;

alias coil : src/coil//coil ;

install install-coil
	: coil
	: <location>lib
	;	

install install-bin 
	: dynarun dynahist_rw dynamod 
	: <location>bin
	;

alias install : install-bin ;
alias test : src/magnet//test src/coil//test src//test ;

explicit install install-bin test buildinfo.hpp ;
