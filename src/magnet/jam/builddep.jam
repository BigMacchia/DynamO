#    DYNAMO:- Event driven molecular dynamics simulator 
#    http://www.marcusbannerman.co.uk/dynamo
#    Copyright (C) 2008  Marcus N Campbell Bannerman <m.bannerman@gmail.com>
#
#    This program is free software: you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    version 3 as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#Dependency calculations

#Parses the command line to see if a property has been set by the user
rule cmd-line-feature-value-set ( feature )
{ return [ MATCH "^$(feature)=(.*)" :  [ modules.peek : ARGV ] ] ; }

#First checks if a property has been set by a user. If not, it sets
#the feature depending on if the check target compiles
rule set-feature-on-build ( feature : check : checkname : build-success-value ? : build-fail-value ? )
{  
  if ! $(build-success-value) { build-success-value = "yes" ; }
  if ! $(build-fail-value) { build-fail-value = "no" ; }

  import feature ;
  feature.feature $(feature) : $(build-fail-value) $(build-success-value) : symmetric optional ;

  if ! [ cmd-line-feature-value-set $(feature) ]
  { 
    return [ check-target-builds $(check) $(checkname)
             : "<"$(feature)">"$(build-success-value)
             : "<"$(feature)">"$(build-fail-value) ] ;
  }
}

rule combine-features ( feature : dependencies + )
{
  import feature ;
  feature.feature $(feature) : yes no : symmetric ;

  local result ;

  for dep in $(dependencies)
  {
    result += "<"$(dep)">no:<"$(feature)">no" ;
  }

  return $(result) ;
}

IMPORT $(__name__) : set-feature-on-build combine-features : : builddep.set-feature-on-build builddep.combine-features ;
